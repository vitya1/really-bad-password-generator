{"version":3,"sources":["lib/generator.js","logo.png","components/PasswordItem.js","components/PasswordList.js","components/Logotype.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","password","with_mapping","cross_obfuscation","prefixes","suffixes","cur_year","Date","getFullYear","i","push","getSuffix","result","passwords","mapping","Map","inc","x","r","index","length","positions","has","all_changes","cur_change","Array","fill","possible_changes_numbers","len","reduce","a","b","slice","_i3","change","cur_pass","password_letter_index","mapped_value","get","substr","applyMappings","pref_pass","_i5","prefix","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","Symbol","iterator","next","done","pass","value","err","return","concat","suf_pass","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","suffix","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","__webpack_require__","p","PasswordItem","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","react_default","createElement","props","Component","PasswordList","rows","row","j","className","map","PasswordItem_PasswordItem","Logotype","posed","img","pressable","init","scale","rotate","press","transition","duration","App","_this","call","state","input_placeholder","source_password","created_passwords","valid_input","updateSourcePasswordValue","bind","assertThisInitialized","generateButtonHandler","_this2","setInterval","placeholders","Math","floor","random","setState","event","target","preventDefault","new_passwords","generateList","_ref","passwordListSize","role","src","logo","alt","href","rel","Form","FormGroup","InputGroup","Input","type","name","onChange","placeholder","invalid","Button","color","onClick","PasswordList_PasswordList","title","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.efc0da72.chunk.js","sourcesContent":["\nfunction getSuffix() {\n    const magic_max_simple_number = 30;//@todo class const\n    const first_suffix_year = 1953;\n    const cur_year = (new Date()).getFullYear();\n    let suffixes = [\n        '123', '1234', '12345', '123456', '111', '777', '222', '333', '666', '999', '4321', '321', '987', '098',\n        '_', '__', '_123', '_1234', '1488', '007', '07', '360', '0101', '911', '69',\n        '01', '02', '03', '04', '05', '06', '07', '08', '09', '3d', '3D', 'a', '!', 'abc', 'asd', 'qwe',\n        '00', '33', '44', '55', '66', '77', '88', '99',\n        '40', '50',  '60',  '70',  '80',  '90', \n        '100', '200', '3000', '2112',\n    ];\n    for(let i = 0; i <= magic_max_simple_number; i++) {\n        suffixes.push(i);\n    }\n    for(let i = first_suffix_year; i < cur_year; i++) {\n        suffixes.push(i);\n    }\n    return suffixes;\n}\n\nfunction applyMappings(password) {\n    const passwords = [password];\n    const mapping = new Map([\n        ['too', '2'], ['to', '2'], ['for', '4'], ['ait', '8'], ['you', 'u'], ['ch', '4'],\n        ['a', '@'], ['a', '4'], ['e', '3'], ['s', '5'],  ['s', '$'], ['o', '0'], ['l', '1'], ['i', '1'], ['t', '7'], ['b', '8'],  ['z', '2'],\n        ['A', '@'], ['A', '4'], ['E', '3'], ['S', '5'],  ['S', '$'], ['O', '0'], ['L', '1'], ['I', '1'], ['T', '7'], ['B', '8'],  ['Z', '2'],\n    ]);\n\n    function inc(x, r, index) {\n        index = index || 0;\n        if(x[index] + 1 >= r[index]) {\n            x[index] = 0;\n            return inc(x, r, index + 1);\n        }\n        x[index] = index >= x.length ? 0 : (x[index] || 0) + 1;\n        return x;\n    }\n\n//console.log(inc([1, 0, 0], [2, 2, 2], 1));\n//console.log(inc([1, 1, 0], [2, 2, 2], 1));\n//console.log(inc([1, 1, 1], [2, 2, 2], 1));\n\n    const positions = [];\n    for(let i = 0; i < password.length; i++) {\n        if(mapping.has(password[i])) {\n            positions.push(i);\n        }\n    }\n    if(positions.length === 0) {\n        return passwords;\n    }\n\n    //'look-up table' of all possible changes\n    const all_changes = [];\n    const cur_change = new Array(positions.length).fill(0);\n    const possible_changes_numbers = new Array(positions.length).fill(2);\n    //the first value has inited\n    let len = possible_changes_numbers.reduce((a, b) => a * b) - 1;\n    for(let i = 0; i < len; i++) {\n        all_changes.push(inc(cur_change, possible_changes_numbers).slice());\n    }\n\n    for(let change of all_changes) {\n        let cur_pass = password;\n        for(let i = 0; i < change.length; i++) {\n            if(change[i]) {\n                let password_letter_index = positions[i];\n                let mapped_value = mapping.get(password[password_letter_index]);\n                cur_pass = cur_pass.substr(0, password_letter_index)\n                 + mapped_value\n                 + cur_pass.substr(password_letter_index + 1, cur_pass.length);\n            }\n        }\n        passwords.push(cur_pass);\n    }\n\n    return passwords;\n}\n\nfunction generateList(password, with_mapping, cross_obfuscation) {\n    with_mapping = with_mapping || false;\n    cross_obfuscation = cross_obfuscation || false;\n    const prefixes = ['!', '_', '-', '__', '.', ',', '1', '123', '1234', '12345', '123456', 'q', 'd', 'm', 'n', 'Q', '4321', '321', '007', '69', 'abc', 'asd',];\n    const suffixes = getSuffix();\n    let result = [];\n    if(with_mapping) {\n        result = applyMappings(password);\n    }\n    else {\n        result = [password];\n    }\n\n    let pref_pass = [];\n    for(let prefix of prefixes) {\n        if(cross_obfuscation) {\n            for(let pass of result) {\n                pref_pass.push(prefix + pass);\n            }\n        }\n        else {\n            pref_pass.push(prefix + password);\n        }\n    }\n    result = result.concat(pref_pass);\n\n    let suf_pass = [];\n    for(let suffix of suffixes) {\n        if(cross_obfuscation) {\n            for(let pass of result) {\n                suf_pass.push(pass + suffix);\n            }\n        }\n        else {\n            suf_pass.push(password + suffix);\n        }\n    }\n    result = result.concat(suf_pass);\n\n    return result;\n}\n\nmodule.exports = generateList;\n","module.exports = __webpack_public_path__ + \"static/media/logo.4405411a.png\";","import React, { Component }  from 'react';\n\nexport class PasswordItem extends Component {\n  render() {\n    return (\n    <div>\n      {this.props.value}\n    </div>\n    );\n  }\n}\n","import React, { Component }  from 'react';\nimport { PasswordItem } from './PasswordItem';\n\nexport class PasswordList extends Component {\n  render() {\n    const rows_amount = 3;\n    const rows = [];\n    let i = 0;\n    while (i < this.props.value.length) {\n      let row = [];\n      for (let j = 0; j < rows_amount; j++) {\n        row.push(this.props.value[i++] || '');\n      }\n      rows.push(row);\n    }\n    return (\n    <div className=\"container\">\n      {\n          rows.map((passwords, i) => \n          <div className=\"row\" key={i}>\n            {\n                passwords.map((password, j) => \n                <div className=\"col\" key={j}>\n                    <PasswordItem value={password}></PasswordItem>\n                </div>\n                )\n            }\n        </div>\n        )\n      }\n    </div>\n    );\n  }\n}\n","import posed from 'react-pose';\n\nexport const Logotype = posed.img({\n    pressable: true,\n    init: {\n        scale: 1,\n        rotate: 0\n    },\n    press: {\n        scale: 1.2,\n        rotate: 40,\n        transition: {\n        duration: 300\n        }\n    }\n});\n","import React, { Component } from 'react';\nimport { Input, Button, Form, InputGroup, FormGroup } from 'reactstrap';\nimport generateList from './lib/generator';\nimport logo from './logo.png';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { PasswordList } from './components/PasswordList';\nimport { Logotype } from './components/Logotype';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input_placeholder: \"Type something...\",\n      source_password: \"\",\n      created_passwords: [],\n      valid_input: true,\n    };\n\n    this.updateSourcePasswordValue = this.updateSourcePasswordValue.bind(this);\n    this.generateButtonHandler = this.generateButtonHandler.bind(this);\n  }\n\n  get passwordListSize() {\n    return 42;\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      const placeholders = [\n        \"your password\",\n        \"something\",\n        \"your name\",\n        \"your girlfriend's name\",\n        \"your cat's name\",\n        \"a word\",\n        \"your favorite movie character\",\n        \"a birth date\",\n        \"an actor's name\",\n        \"anything else\",\n        \"a random string\"\n      ];\n      const value = placeholders[Math.floor(Math.random() * placeholders.length)];\n      this.setState({ input_placeholder: \"Type \" + value + '...' });\n    }, 2000);\n  }\n\n  updateSourcePasswordValue(event) {\n    this.setState({\n      source_password: event.target.value\n    });\n  }\n\n  generateButtonHandler(event) {\n    event.preventDefault();\n    if (this.state.source_password.length === 0) {\n      this.setState({\n        valid_input: false,\n        created_passwords: []\n      });\n      return;\n    }\n    //shuffling passwords\n    let new_passwords = generateList(this.state.source_password, true, true);\n    for (let i = new_passwords.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [new_passwords[i], new_passwords[j]] = [new_passwords[j], new_passwords[i]];\n    }\n    this.setState({\n      valid_input: true,\n      created_passwords: new_passwords.slice(0, this.passwordListSize)\n    });\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        <main role=\"main\" className=\"App-main container text-center\">\n          <Logotype src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1>Really bad password123 generator</h1>\n          <p className=\"lead\">Create, Look, Never Use.</p>\n          <p className=\"text-muted small\">\n            Check the password list generator on <a href=\"https://github.com/vitya1/really-bad-password-generator\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\n          </p>\n\n          <Form className=\"row justify-content-md-center\">\n            <FormGroup className=\"col-6\">\n              <InputGroup>\n                <Input type=\"text\" name=\"password\"\n                  value={this.state.source_password}\n                  onChange={this.updateSourcePasswordValue}\n                  placeholder={this.state.input_placeholder}\n                  invalid={!this.state.valid_input}\n                />\n                &nbsp;\n                  <Button color=\"info\" onClick={this.generateButtonHandler}>Generate</Button>\n              </InputGroup>\n            </FormGroup>\n          </Form>\n\n          {\n            <PasswordList value={this.state.created_passwords}></PasswordList>\n          }\n        </main>\n\n        <footer className=\"App-footer text-center\">\n          <div className=\"inner\">\n            <div className=\"text-muted small\">Icons made by <a href=\"https://www.freepik.com/\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\" target=\"_blank\" rel=\"noopener noreferrer\">CC 3.0 BY</a></div>\n          </div>\n        </footer>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}